{
	"swagger": "2.0",
	"info": {
		"description": "This is the API used by chainstamp.io",
		"version": "Version 1.1",
		"title": "Chainstamp REST API"


	},
	"host": "api.chainstamp.io:8443",
	"basePath": "/",
	"schemes":["https"],
	"tags": [{
		"name": "stamp-controller",
		"description": "Stamp Controller"
	}],
	"paths": {
		"/proof/{seedHash}": {
			"get": {
				"tags": ["Verify"],
				"summary": "Get a proof file using a seed hash",
				"description": "The proof file is your way to validate a Chainstamp proof independently. This method will return a plain text list of sha256 list of hashes which can be saved as a text file. The hashes in that file correspond to hashes of files submitted to us and hashed together to create a 'seedHash' which is submitted to the bitcoin blockchain in a transaction output.",
				"operationId": "get-proof-file",
				"produces": ["*/*"],
				"parameters": [{
					"name": "seedHash",
					"in": "path",
					"description": "seedHash",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/stamp/basic": {
			"post": {
				"tags": ["Create"],
				"summary": "Create a free chainstamp proof.",
				"description": "Use this operation to create a blockchain timestamp (Chainstamp proof) for any digital documents. This api is free and will be submittd to the bitcoin network within 24hrs. Our paid apis (comming soon) ,and our web interface, allow for faster or immediate submission.<br/><br/>Limits: Free version allows only up to 3 file hashes in 'originalHashes' array.",
				"operationId": "stamp-basic",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"in": "body",
					"name": "basicRequest",
					"description": "basicRequest",
					"required": true,
					"schema": {
						"$ref": "#/definitions/StampBasicRequest"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OpenResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/verify/item/{itemHash}": {
			"get": {
				"tags": ["Verify"],
				"summary": "Verify status of a file (item)",
				"description": "Use this endpoint with the hash of a digitial file to check its status. Pass the sha256 hash of any digital file as the {itemHash}.",
				"operationId": "verify-item",
				"produces": ["application/json"],
				"parameters": [{
					"name": "itemHash",
					"in": "path",
					"description": "itemHash",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VerifyItemStatus"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/verify/stamp/{stampId}/{stampHash}": {
			"get": {
				"tags": ["Verify"],
				"summary": "Verify status",
				"description": "Verify status using a stampId and a stampHash. Use this method to check the status of a Chainstamp proof. If the stampId or stampHash is unknown, use the /verify/item/{itemHash} endpoint instead.",
				"operationId": "verify-stamp",
				"produces": ["application/json"],
				"parameters": [{
					"name": "stampId",
					"in": "path",
					"description": "stampId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}, {
					"name": "stampHash",
					"in": "path",
					"description": "stampHash",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VerifyStatus"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		}
	},
	"definitions": {
		"OpenResponse": {
			"type": "object",
			"properties": {
				"expectedSubmissionTime": {
					"type": "integer",
					"format": "int64"
				},
				"originalHashes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"paymentAddress": {
					"type": "string"
				},
				"paymentAmtBtc": {
					"type": "number",
					"format": "double"
				},
				"paymentId": {
					"type": "integer",
					"format": "int64"
				},
				"seedHash": {
					"type": "string"
				},
				"seedId": {
					"type": "integer",
					"format": "int64"
				},
				"stampHash": {
					"type": "string"
				},
				"stampId": {
					"type": "integer",
					"format": "int64"
				},
				"status": {
					"type": "integer",
					"format": "int32"
				},
				"transactionId": {
					"type": "string"
				}
			},
			"title": "OpenResponse"
		},
		"StampBasicRequest": {
			"type": "object",
			"properties": {
				"emailToNotify": {
					"type": "string"
				},
				"originalHashes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "StampBasicRequest"
		},
		"VerifyItemStatus": {
			"type": "object",
			"properties": {
				"blockHash": {
					"type": "string"
				},
				"blockNumber": {
					"type": "integer",
					"format": "int32"
				},
				"blockTime": {
					"type": "string",
					"format": "date-time"
				},
				"confirmations": {
					"type": "integer",
					"format": "int32"
				},
				"expectedSubmissionTime": {
					"type": "integer",
					"format": "int64"
				},
				"seedHash": {
					"type": "string"
				},
				"status": {
					"type": "integer",
					"format": "int32"
				},
				"txId": {
					"type": "string"
				},
				"txTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "VerifyItemStatus"
		},
		"VerifyStatus": {
			"type": "object",
			"properties": {
				"blockHash": {
					"type": "string"
				},
				"blockNumber": {
					"type": "integer",
					"format": "int32"
				},
				"blockTime": {
					"type": "string",
					"format": "date-time"
				},
				"confirmations": {
					"type": "integer",
					"format": "int32"
				},
				"expectedSubmissionTime": {
					"type": "integer",
					"format": "int64"
				},
				"paid": {
					"type": "boolean"
				},
				"paymentLevel": {
					"type": "string"
				},
				"seedHash": {
					"type": "string"
				},
				"status": {
					"type": "integer",
					"format": "int32"
				},
				"txId": {
					"type": "string"
				},
				"txTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "VerifyStatus"
		}
	}
}